GOAL:



generate image ID system
pass image IDs through render commands
FontWrite Command




sequence is submitted on its own to render custom text
 - FontWrite
 - requires text image id
 - requires target image id
 - requires text
text is rendered to image and not presented


visualNode
  - visualNode::commandinterface
    - visualNode::textbox
      - *ui_elements
        - background
        - textlines

use the char commands to call a core_function method
core_function method:
  defines a viewport
  defines a CI render sequence
  defines an image pointer
  
  defines another sequence
  renders cube
  renders ci child image
  to another image pointer
  
 which holds a rectangle viewport
and a list of commands and submits it as a pointed array, ptr to image storage
to the command hub to be rendered as an image and stored to the ptr

use the char commands to transfer any stored sequences to the render thread for
processing

renderthread while checks for stored sequences
finds one and renders it to image target...

present global image
create CI-node



edit and save function
bring up edit window
submit to command system
font & writing
ui system and focus setting
a visual to click on
control information
you need a rendering system




rendering system:
	is alerted to rerender a set of nodes and their children
	each node renders to its own image as a composite of itself and its children
  then rerenders all ascendants of the node
  
  need to know about the node:
    ptr to node
    delegate method which contains the primitive render instructions/or ptr to list containing
	    render calls...	
  
  
  
    ##################################################################################
    
    


.createscript finishThreshold = 1		 script = 1, demo = 2
	script_name:
	...
	resolved

create function construct_and_attach_child
unresolved_command

demo create function @{}
	demo_initiation
	demo invoke @{}
		demo_initiation
		.runscript
		function_name:
		@function_name
		...
		finish
		IDLE
		enddemo
		RESOLVED
	invoke initialize_function
		.runscript
		function_name:
		...
		RESOLVED
	...
	enddemo
	RESOLVED
invoke construct_and_attach_child
	.runscript
	...
	RESOLVED

	


Templates - confirmed processes
 - create function @{name_of_function_to_create}
    - declare function
    - define function
 - declare function
    - invoke declare_function
 - define function
    - invoke define_function
 - invoke @{name_of_function_to_invoke}
    ? sets contextual variable name_of_function_to_invoke
    - .runScript invoke_function_with_args



Process Matrix - previous history of actions for suggestions
	