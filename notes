GOAL:


create function with CI
edit that function



onscreen debugging of mouse position



visualNode
  - visualNode



globalRoot
  - visualNode::debugWindow
    - visualNode::textblock
	  - 
  - visualNode::commandinterface
    - visualNode::textbox
      - *ui_elements
        - background
        - textlines


control information
a visual to click on
ui system and focus setting
font & writing
submit to command system
bring up edit window
edit and save function




rendering system:
	is alerted to rerender a set of nodes and their children
	each node renders to its own image as a composite of itself and its children
  then rerenders all ascendants of the node
  
  need to know about the node:
    ptr to node
    delegate method which contains the primitive render instructions/or ptr to list containing
	    render calls...	
  
  
  
    ##################################################################################
    
    


.createscript finishThreshold = 1		 script = 1, demo = 2
	script_name:
	...
	resolved

create function construct_and_attach_child
unresolved_command

demo create function @{}
	demo_initiation
	demo invoke @{}
		demo_initiation
		.runscript
		function_name:
		@function_name
		...
		finish
		IDLE
		enddemo
		RESOLVED
	invoke initialize_function
		.runscript
		function_name:
		...
		RESOLVED
	...
	enddemo
	RESOLVED
invoke construct_and_attach_child
	.runscript
	...
	RESOLVED

	


Templates - confirmed processes
 - create function @{name_of_function_to_create}
    - declare function
    - define function
 - declare function
    - invoke declare_function
 - define function
    - invoke define_function
 - invoke @{name_of_function_to_invoke}
    ? sets contextual variable name_of_function_to_invoke
    - .runScript invoke_function_with_args



Process Matrix - previous history of actions for suggestions
	