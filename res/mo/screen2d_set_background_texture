Screen2D: Set Background Texture
param {
  name=project-init-source-filepath
  obtain=required-context
    > MESSAGE_BOX {
      message=NotYetImplemented
    }
}
param {
  name=project-init-header-filepath
  obtain=required-context
    > MESSAGE_BOX {
      message=NotYetImplemented
    }
}
param {
  name=project-data
  obtain=obtain-project-data
    > MESSAGE_BOX {
      message=NotYetImplemented
    }
}
param {
  name=tex-field-name
  obtain=set-tex-field-name
    > FUNCTION {
      MCcall(mc_mo_set_top_context_cstr(process_stack, "tex-field-name", "tex_background"));
    }
}
> FUNCTION {
  const char *data_name, *tex_fn;
  MCcall(mc_mo_get_context_cstr(process_stack, "project-data", true, &data_name));
  MCcall(mc_mo_get_context_cstr(process_stack, "tex-field-name", true, &tex_fn));

  // Get the data struct
  struct_info *si = NULL;
  MCcall(find_struct_info(data_name, &si));
  if(!si) {
    MCerror(7563, "TODO");
  }

  // Insert the texture field into the data
  MCcall(mcs_append_field_to_struct(si, "mcr_texture_resource", 1, tex_fn));
}
> FUNCTION {
  puts("aa");
  // Check if a load-resources function exists, and if not, create it
  char lrcn_buf[64], buf[512];
  function_info *fi;
  const char *lrcn, *data_name;

  MCcall(mc_mo_get_context_cstr(process_stack, "project-data", true, &data_name));

  puts("bb");
  MCcall(mc_mo_get_context_cstr(process_stack, "project-load-resources-function", true, &lrcn));
  if(!lrcn) {
  puts("cc");
    // Create the function
    // -- Obtain the project name
    MCcall(mc_mo_get_context_cstr(process_stack, "project-name", true, &lrcn));
    if(!lrcn) {
      puts("Error - require project-name context to initailize the load_resources function");
      return 8;
    }
  puts("dd");

    // -- Make the function name
    sprintf(lrcn_buf, "_%s_load_resources", lrcn);
    lrcn = lrcn_buf;

    // -- Obtain the init source file name
    const char *init_source_filepath;
    MCcall(mc_mo_get_context_cstr(process_stack, "project-init-source-filepath", true, &init_source_filepath));
    if(!init_source_filepath) {
      return 9;
    }
    mc_source_file_info *init_source_file;
    MCcall(mcs_obtain_source_file_info(init_source_filepath, true, &init_source_file));
    if(!init_source_file)
      return 10;
  puts("ee");
    
    // -- Insert a somewhat empty function into the source file
    strcpy(buf, "  return 0;");

    // -- Ensure new function doesn't exist
    MCcall(find_function_info(lrcn, &fi));
    if(fi)
      return 11;

    // -- Create the new resources-load function
    char param[64];
    sprintf(param, "%s *data", data_name);
    char *pparam = param;
    MCcall(mcs_construct_function_definition(init_source_file, lrcn, "int", 0, 1, &pparam, buf));
  }
  puts("ff");

  // Get the function
  MCcall(find_function_info(lrcn, &fi));
  if(!fi)
    return 12;

  // TODO get the data param name

  // Get the field name
  const char *tex_fn;
  MCcall(mc_mo_get_context_cstr(process_stack, "tex-field-name", true, &tex_fn));

  // Generate the code
  const char *texfp;
  MCcall(mc_mo_get_context_cstr(process_stack, "texture-filepath", true, &texfp));
  sprintf(buf, "MCcall(mcr_load_texture_resource(\"%s\", &data->%s));\n", texfp, tex_fn);

  // Insert inside the load resources function
  MCcall(mcs_attach_code_to_function(fi, buf));




  printf("code-insert:%s\n", buf);
   
    // Obtain parameter values
    // char *project_resource_load_function = (char *)hash_table_get("project-resource-load-function", context);
    // if (project_resource_load_function)
    //  return 0;


    // puts("NotYetImplemented");
    // puts("- activate a CONFIRM_DENY_DIALOG to create a load_resources function");
    // puts("  - if(confirm): create load_resources in 'project-init-source-file
    // ' & call it in the project-initialize-function");
    // puts("  - else FAIL (for now...)");
    // return 7;
}
param {
  name=texture-filepath
  obtain=obtain-texture-filepath
    > FILE_DIALOG {
      message=Select the texture file
      initial_filename={CSTR:NULL}
      initial_folder={CSTR:NULL}
      target_context_property=texture-filepath
    }
}
> FUNCTION {
    const char *texfp;
    MCcall(mc_mo_get_context_cstr(process_stack, "texture-filepath", true, &texfp));
    printf("texture-filepath:%s\n", texfp);
}
> FUNCTION {
    puts("NotYetImplemented");
    puts("- ensure the header references render/common.h");
    puts("- insert a field 'mcr_texture_resource *bg_texture' into project-data");
    puts("- insert a call to issue texture resource into the project-resource-load-function");
}